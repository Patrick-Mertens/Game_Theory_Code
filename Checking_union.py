#PR_get_param is giving errors, so let check manual if split1 gives corrects sizes,
#other checks need to be done, limit or split beter is

Inc = [0, 1, 6, 8, 9, 10, 11, 12, 15, 18, 25, 29, 34, 38, 39, 41, 46, 49, 55, 56, 59, 60, 61, 63, 67, 68, 70, 72, 75, 79, 80, 82, 84, 313, 314, 315, 320, 321, 322, 326, 328, 329, 331, 333, 335, 336, 337, 338, 339, 343, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 364, 366, 369, 370, 371, 374, 376, 379, 381, 385, 397, 399, 400, 402, 403, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 422, 425, 428, 430, 431, 432, 435, 437, 438, 439, 442, 443, 447, 448, 449, 450, 452, 454, 455, 456, 459, 463, 464, 466, 467, 469, 471, 473, 475, 476, 478, 479, 481, 484, 486, 487, 488, 593, 599, 602, 605, 608, 613, 614, 616, 617, 621, 625, 627, 634, 636, 641, 642, 643, 646, 649, 650]
list_d = [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589]
Size1 = [22, 36, 60, 81, 86, 87, 114, 139, 143, 149, 163, 180, 183, 198, 220, 231, 233, 237, 242, 256, 260, 265, 270, 271, 281, 284, 324, 326, 329, 331, 353, 386, 400, 416, 434, 460, 512, 529, 534, 536, 541, 547, 597, 608, 641, 649, 650]


# Convert the lists to sets
Size1_set = set(Size1)
Inc_set = set(Inc)
list_d_set = set(list_d)

# Find the common numbers
common_Size1_Inc = Size1_set.intersection(Inc_set)
common_Size1_list_d = Size1_set.intersection(list_d_set)
common_Inc_list_d = Inc_set.intersection(list_d_set)
common_all_three = Size1_set.intersection(Inc_set, list_d_set)

# Print the common numbers
print("Common between Size1 and Inc:", common_Size1_Inc)
print("Common between Size1 and list_d:", common_Size1_list_d)
print("Common between Inc and list_d:", common_Inc_list_d)
print("Common between all three lists:", common_all_three)

Size1 = [8059587727368298496, 2080619628198763008, 7114221739453414400, -3573477914212428800, 2242124975037825024, -5645460705153701888, 107356894047099808, -5654179713886511104, 1787590169110834944, -7375204975366410240, -6517783049476727808, -4670130860816137216, -8320878543260281856, -4556995728345822208, -4355106738796897792, -6766823292865592320, 8955822254620423168, 8044290263969824768, 590496550684449024, 6453346861211496448, -296390102115309824, 873825118381917568, 2357396303181611008, 2719231319432940032, -3710605683578115072, -4616950973926841344, 1026065755341060992, -3207152376828710912, 2662856099995881984, -2815454794225359872, 3314928712906930176, 2420947306760520192, -7756350426455072768, 2637320422951791104, -6639875290682285056, 6649472732843109376, -7024584538810351616, -5034769002237007872, -2821689573938165760, 4371971549389853184, 6161920396179594240, -1027778822691104000, -9072980659758332928]
Inc = [-3374148555109275136, -4902532987801034752, 2294853194039862016, -7930499434971978752, -1362234120250777088, 8957544781677353984, -7700159385193257984, -1726325211416029952, 242373773045050304, -6229965730442326016, -6153229277945423872, -3207152376828710912, 103655785699049696, 5999558244503558144, 2503647182707414016, 2596955805216986112, -1359731791701764096, -4501865398055677952, 3314928712906930176, -1089493678083748992, -262742596660455200, -7756350426455072768, -6727923004680173568, 6817796313945968640, 5309030843694430208, -4732056389770656768, 1141331210699377024, -2972398499134456832, -8520229152425552896, -9209707731909772288, 6206627598423750656, -7676013301836930048, 7611154589297952768, -1364482904194221056, 3499497944718843904]
List_d = [1427681197108524032, 7114221739453414400, -3573477914212428800, 4529345129529314816, 8865483554834628608, -7860680318371510272, 8320281757036511232, -5409138578405021696, 8595578541322311680, -6721707159312557056, -4827039011601637376, -3374148555109275136, -4902532987801034752, 1174232718064954112, -249311584143900416, 2294853194039862016, 2744619278848465920, -7930499434971978752, -8030274669524783104, 738407822364817920, -6185488806305263616, 4194879395519349248, -1362234120250777088, -7663855519754221568, -4078394139718744064, 9091082051044098048, -5111860033483149312, 6208211041505229824, 8957544781677353984, -7700159385193257984, -2035506830540222976, -1726325211416029952, -6251378795498940416, 242373773045050304, -4902532987801034752, -1519241838376410112, -1069342019295728000, -5799877559309275136, 8436576203080563712, -6229965730442326016, -2724086586216110080, -6560637305829277696, -6809692289807509504, 4308512445673410048, -6153229277945423872, 2431018471390322176, -3207152376828710912, 103655785699049696, 5999558244503558144, -3640164174499466752, 2096842000317553920, 2235659024893384960, -898144207024614016, 2503647182707414016, -5662415768912573440, -2071717980238748928, -6283774359413232640, 4423560285311205888, -4494793970000303104, -8617649895586637824, 4352486248531741184, 2596955805216986112, 7693709841684581376, 2662856099995881984, 7167691858643045376, -1563480860112436992, -5679118570162861056, -1359731791701764096, -2815454794225359872, -4501865398055677952, 3314928712906930176, 946552980566708608, -1089493678083748992, 5908474727796561920, 7073767750238193664, 2420947306760520192, -262742596660455200, -8178648844904404992, 1915663382763033088, -9034048156775442432, -7065378141026214912, -7756350426455072768, -643632761729739008, 6480692260334510080, 9032498355476743168, 8153918014996777984, 6657500757098878976, -6727923004680173568, -8024717856996251648, 6488600056760841216, -4942929868475342848, 6817796313945968640, 5309030843694430208, -4732056389770656768, -6884266186185495552, 1141331210699377024, -2972398499134456832, -3568366360482727936, -4533723005830945792, -8520229152425552896, 132898461347132800, 692358797115053696, 5116142667430520832, 4433107432851251200, -9209707731909772288, 443327937169541824, 806026174699533056, 6037303876778059776, 6206627598423750656, -5237739852626043904, -4279715493078088192, 2557178765036525056, -6017186961914526720, -7676013301836930048, 7611154589297952768, -1364482904194221056, 3499497944718843904, -1881453595964238080, -1550617385642953984, -478419380727370624, -5842996619515475968, -4744399261427899392, -8252999168098319360, -396269287945148224]

# Converting lists to sets
set_Size1 = set(Size1)
set_Inc = set(Inc)
set_List_d = set(List_d)

# Finding common elements
common_elements = set_Size1.intersection(set_Inc, set_List_d)

# Printing the common elements
print(f"Common elements: {common_elements}")

Size1_index = [0, 36, 60, 81, 86, 87, 114, 143, 148, 151, 155, 161, 175, 192, 195, 201, 205, 210, 215, 216, 226, 229, 277, 288, 290, 294, 299, 335, 352, 357, 359, 364, 370, 424, 426, 429, 431, 453, 486, 500, 516, 534, 560]
Inc_Index_list_d = [96, 97, 100, 102, 107, 317, 318, 320, 322, 328, 333, 335, 336, 337, 342, 350, 356, 358, 359, 361, 365, 370, 376, 380, 381, 382, 384, 385, 388, 393, 397, 402, 403, 404, 405]

# Converting lists to sets
Set_Size1_index = set(Size1_index)
Set_Inc_Index_list_d = set(Inc_Index_list_d)

common_index = Set_Size1_index.intersection(Set_Size1_index,Set_Inc_Index_list_d)

# Printing the common elements
print(f"Common indx: {common_index}") #{370, 359, 335}


#######
Size1_index_2 =  [0, 14, 39, 40, 84, 105, 111, 114, 118, 124, 138, 155, 158, 183, 194, 196, 200, 205, 243, 263, 267, 272, 277, 278, 288, 291, 310, 324, 326, 329, 331, 353, 386, 400, 416, 434, 460, 512, 529, 534, 536, 541, 547]
Size1_index_3 = [23, 25, 60, 81, 86, 87, 111, 114, 118, 124, 138, 155, 158, 169, 189, 193, 198, 203, 204, 214, 217, 236, 258, 269, 271, 275, 280, 324, 326, 329, 331, 353, 386, 400, 416, 434, 460, 512, 529, 534, 536, 541, 547]
